name: Spring Boot CI

on:
  push:
    branches:
      - main  # Trigger on push to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger on PR targeting the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest  # Run on the latest Ubuntu environment

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'  # Specify the Java version

      # Step 3: Set up Maven (optional, but specified version can help with consistency)
      - name: Set up Maven
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          maven-version: '3.8.1'  # Optional: specify Maven version

      # Step 4: Build and Test the project with Maven (or Gradle)
      - name: Build and Test with Maven
        run: mvn clean install  # Run build and tests (skip tests if needed with '-DskipTests')

      # Step 5: Pull the latest changes (if needed)
      - name: Pull latest changes
        run: git pull origin main

      # Step 6: Push changes (if applicable)
      - name: Push changes to repository
        run: |
          git config --global user.email "youremail@example.com"
          git config --global user.name "Your Name"
          git add .
          git commit -m "Update after build"
          git push origin main
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # Use GitHub token for authentication

      # Step 7: (Optional) Run Spring Boot Application (if applicable)
      - name: Run Spring Boot Application
        run: |
          mvn spring-boot:run &
          echo "Spring Boot Application is running"
        continue-on-error: true  # Optional: allows the workflow to continue even if this step fails

